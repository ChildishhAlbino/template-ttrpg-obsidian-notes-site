import { CATEGORIES, CATEGORY_EMOJI } from "./categories"
import { MODE } from "./envvars"
import { getVault } from "./obisidan"
import { getFoldersInDirectory, toTitleCase } from "./utils"

const WITH_VAULT_PATH = (input) => `vault/${input}`

const SIDERBAR_TITLE_OVERRIDES = {
    "wiki": "ðŸ“– Wiki",
    "references": "ðŸ“‹ References",
    "campaigns": "ðŸ“š Campaigns"
}

export async function getSidebar({ autogeneratedItemOptions: { collapsed } } = { autogeneratedItemOptions: { collapsed: true } }) {
    console.log("Getting sidebar for mode", { MODE })
    const foldersToShow = await getFoldersToShowOnSidebar()
    console.log({ foldersToShow })

    const autogeneratedItems = foldersToShow.map(folder => {
        const folderKey = folder.toLowerCase()
        const titleOverride = SIDERBAR_TITLE_OVERRIDES[folderKey]
        return {
            label: titleOverride ?? folder,
            autogenerate: { directory: WITH_VAULT_PATH(folder), collapsed: collapsed },
            collapsed: collapsed
        }
    })

    return [
        {
            label: "ðŸ“‚ Categories",
            items: CATEGORIES.map(getSidebarForCategory),
        },
        ...autogeneratedItems
    ]
}

function getSidebarForCategory(category) {
    const emoji = CATEGORY_EMOJI[category]
    return { label: `${emoji} ${toTitleCase(category)}`, link: `/categories/${category}` }
}

async function getFoldersToShowOnSidebar() {
    const ILLEGAL_FIRST_CHARS = ["_", "."]
    const subDirectories = await getFoldersInDirectory(getVault())
    return subDirectories.filter(dir => !ILLEGAL_FIRST_CHARS.includes(dir[0]))
}